syntax = "proto3";

package DC.Packet;

import "_Item.proto";
import "_Character.proto";

option java_multiple_files = false;
option java_outer_classname = "dediServer";
option java_package = "com.packets.dediServer";

message SGameQuestContentInfo {
    string contentId = 1;
    int32 contentValue = 2;
}

message SGameQuestInfo {
    string merchantId = 1;
    string questId = 2;
    string chapterId = 3;
    int32 alreadyGetAffinity = 4;
    repeated SGameQuestContentInfo infos = 5;
}

message ReservedPartyMember {
    string accountId = 1;
    SACCOUNT_NICKNAME nickname = 2;
}

message SReservedPartyMember {
    string accountId = 1;
    bytes nickname = 2;
    bytes streamingNickName = 3;
    int32 karmaRating = 4;
    string characterClass = 5;
}

message S2C_GameEnterUser_Json {
    string restUrl = 1;
    bytes nickName = 2;
    bytes streamingNickName = 3;
    string characterClass = 4;
    string characterId = 5;
    uint32 gender = 6;
    uint32 level = 7;
    string partyId = 8;
    int32 karmaRating = 9;
    repeated SReservedPartyMember reservedPartyMember = 10;
}

message GameExitAdvPoint {
    int32 advPointType = 1;
    int32 advPoint = 2;
}

message GameExitExpPoint {
    uint32 expPointType = 1;
    uint32 expPoint = 2;
}

message Killlog {
    string instigatorAccountId = 1;
    string instigatorName = 2;
    string effectCauserName = 3;
    uint32 hitBoxType = 4;
    int32 advPoint = 5;
}

message MonsterKillLog {
    string monsterName = 1;
    uint32 monsterKillCount = 2;
}

message C2S_GameExitUser_POST {
    uint32 escape = 1;
    string accountId = 2;
    string characterId = 3;
    uint64 gameId = 4;
    repeated SItem items = 5;
    repeated SItem guaranteedItems = 6;
    string characterClass = 7;
    uint32 killCount = 8;
    repeated GameExitAdvPoint advPoints = 9;
    string escapeMapName = 10;
    string reason = 11;
    repeated GameExitExpPoint expPoints = 12;
    repeated Killlog killLogData = 13;
    repeated MonsterKillLog monsterKillLogs = 14;
    uint32 gameType = 15;
    uint32 needBlock = 16;
    uint32 needHWBlock = 17;
    
    enum ESCAPE {
        NONE = 0;
        SUCCESS = 1;
        FAIL = 2;
    }
}

message C2S_GameEnterUser_Post {
    string accountId = 1;
    string characterId = 2;
    uint64 gameId = 3;
    uint32 isSuccess = 4;
}

message S2C_GameStartServer_Json {
    string restUrl = 1;
    uint64 gameId = 2;
    uint32 maxGameUser = 3;
    uint32 waitTimeSec = 4;
    repeated string dungeonMapIds = 5;
    uint32 gameHackPolicy = 6;
    uint32 validPlayerMeleeAttackRange = 7;
    uint32 gameType = 8;
    uint32 shippingLogOnOffPolicy = 9;
    uint32 shippingLogLevelPolicy = 10;
    uint32 gmOnOffPolicy = 11;
    uint32 shippingLogIronShieldOnOffPolicy = 12;
    uint32 shippingLogIronShieldLevelPolicy = 13;
    uint32 currentFloor = 16;
    uint32 floorMatchmakingOnOff = 17;
    uint32 matchmakingType = 18;
    string region = 19;
    string fleetId = 20;
    string dungeonIdTag = 21;
    string cloudScanUrl = 22;
    string serverLocate = 23;
    string matchingQueueType = 24;
    uint32 baseCampRemovedPolicy = 25;
    uint32 numReservedUsers = 26;
    uint32 reservedUserWaitTimeoutSec = 27;
    
    enum MATCH_MAKE {
        NONE = 0;
        NORMAL = 1;
        FLOOR = 2;
    }
}

message C2S_GameEndServer_POST {
    repeated GameEndUserInfo users = 1;
    uint64 gameId = 2;
    repeated Circle circles = 3;
}

message GameEndUserInfo {
    string accountId = 1;
    uint32 kill = 2;
    uint32 death = 3;
}

message C2S_GameStart_POST {
    uint64 gameId = 1;
    repeated string mapNames = 2;
}

message C2S_GameCharacterInfo_Get {
    uint64 gameId = 1;
    string accountId = 2;
    string characterId = 3;
    uint32 gameType = 4;
}

message SRankGameUserInfo {
    string rankId = 1;
    uint32 currentPoint = 2;
    uint32 needPoint = 3;
    uint32 currentTotalPoint = 4;
}

message S2C_GameCharacterInfo_Json {
    uint64 gameId = 1;
    string accountId = 2;
    string characterId = 3;
    repeated SItem items = 4;
    repeated SPerk perks = 5;
    repeated SSkill skills = 6;
    repeated SSpell spells = 7;
    repeated string characterSkinIds = 8;
    repeated string itemSkinIds = 9;
    repeated SEMOTE emotes = 10;
    repeated string actionIds = 11;
    repeated SMusic musics = 12;
    repeated SShapeShift shapeShifts = 13;
    repeated SGameQuestInfo quests = 14;
    SRankGameUserInfo rankInfo = 16;
    uint32 entranceFee = 17;
    string seasonId = 18;
    uint32 isSeason = 19;
    repeated string armorSkinIds = 20;
    int32 totalPlayTimeSec = 21;
    int32 level = 22;
    int32 fame = 23;
    int32 isBlackList = 24;
    int32 gearScore = 25;
    int32 expressItemCount = 26;
    int32 maxSendExpressCount = 27;
    string religionSeasonId = 28;
    string religionId = 29;
    int32 blessingLv = 30;
}

message C2S_GameAliveCheck_GET {
    uint64 gameId = 1;
}

message AliveDataInfo {
    string Id = 1;
    repeated string Us = 2;
}

message C2S_AliveAppendData_GET {
    string Gs = 1;
    repeated AliveDataInfo infos = 2;
}

message C2S_GameInterrupt_POST {
    uint64 gameId = 1;
}

message C2S_UserReport_POST {
    uint64 gameId = 1;
    string reportAccountId = 2;
    repeated uint32 category = 3;
    string targetAccountId = 4;
    SACCOUNT_NICKNAME targetNickName = 5;
    string targetCharacterId = 6;
    string reportContent = 7;
}

message S2C_UserReport_POST_Response {
    string reportAccountId = 1;
    string targetAccountId = 2;
    string reportKey = 3;
    uint32 category = 4;
}

message Location {
    int32 x = 1;
    int32 y = 2;
    int32 z = 3;
}

message Circle {
    Location pos = 1;
    float radius = 2;
}

message NewItemLog {
    Location pos = 1;
    string itemId = 2;
}

message GameResultInfo {
    string accountId = 1;
    string characterId = 2;
    uint64 gameId = 3;
    string characterClass = 4;
    uint32 killCount = 5;
    repeated GameExitAdvPoint advPoints = 6;
    string escapeMapName = 7;
    string reason = 8;
    repeated GameExitExpPoint expPoints = 9;
    repeated Killlog killLogData = 10;
    repeated MonsterKillLog monsterKillLogs = 11;
    uint32 gameType = 12;
    uint32 needBlock = 13;
    uint32 needHWBlock = 14;
    uint32 blockTime_min = 15;
    int32 addTriumphExpValue = 16;
    repeated Location locations = 17;
    repeated NewItemLog newItemLogs = 18;
    repeated SGameQuestInfo quests = 19;
    repeated SGameStat gameStats = 20;
    string seasonId = 21;
    uint32 isSeason = 22;
    string dungeonIdTag = 23;
    uint32 isBasecamp = 24;
    string userPcLanguageCode = 25;
    string characterNickName = 26;
    string characterSteamingModeNickName = 27;
}

message C2S_GameEscapeUser_POST {
    GameResultInfo resultInfo = 1;
    repeated SItem items = 2;
    string secretId = 3;
    repeated SFriendItemRecoveryInfo friendItemRecoveryInfos = 4;
}

message C2S_GameExitUser_V2_POST {
    GameResultInfo resultInfo = 1;
}

message C2S_GameExitEscapedUser_POST {
    string accountId = 1;
    string characterId = 2;
    uint64 gameId = 3;
}

message SSkill_Floor {
    SSkill skill = 1;
    int32 count = 2;
}

message SSpell_Floor {
    SSpell spell = 1;
    int32 count = 2;
}

message SMusic_Floor {
    SMusic music = 1;
    int32 count = 2;
}

message SShapeShift_Floor {
    SShapeShift shapeShift = 1;
    int32 count = 2;
}

message FloorMatchMaking_CharacterInfo {
    string accountId = 1;
    string characterId = 2;
    repeated SDownItem downItems = 3;
    repeated SPerk perks = 4;
    repeated SSkill_Floor skills = 5;
    repeated SSpell_Floor spells = 6;
    repeated SMusic_Floor musics = 7;
    repeated SShapeShift_Floor shapeShifts = 8;
    repeated string characterSkinIds = 9;
    repeated string itemSkinIds = 10;
    repeated SEMOTE emotes = 11;
    int32 hp = 12;
}

message C2S_Prepare_FloorMatchMaking {
    FloorMatchMaking_CharacterInfo info = 1;
    GameResultInfo resultInfo = 2;
}

message S2C_GamePolicy_GET {
    repeated string appHash = 1;
    string policyJson = 2;
}

message S2C_GameFileDB_GET {
    string fileDBJson = 1;
}

message C2S_GameSpectator_Check_POST {
    string accountId = 1;
    string token = 2;
}

message S2C_GameSpectator_Check_Json {
    uint32 isSuccess = 1;
}

message GameDown_UserPartyInfo {
    string accountId = 1;
    SACCOUNT_NICKNAME nickname = 2;
    string characterClass = 3;
    uint32 gender = 4;
    uint32 level = 5;
}

message S2C_GameDown_UserParty_GET {
    repeated GameDown_UserPartyInfo partyMember = 1;
}

message C2S_GameReady_POST {
    uint64 gameId = 1;
}

message GameFloorMatchMaking_UserInfo {
    string accountId = 1;
    string characterId = 2;
    string partyId = 3;
}

message C2S_FloorMatchMaking_POST {
    repeated GameFloorMatchMaking_UserInfo infos = 1;
    uint64 gameId = 2;
    uint32 currentFloor = 3;
    string dungeonId = 4;
}

message GameFloorMatchMaking_UserInfoResponse {
    string accountId = 1;
    string characterId = 2;
    string ip = 3;
    int32 port = 4;
    string sessionId = 5;
}

message S2C_FloorMatchMaking_POST_Response {
    repeated GameFloorMatchMaking_UserInfoResponse infos = 1;
}

message C2S_IronShield_Report_POST {
    uint32 callbackType = 1;
    string reportId = 2;
    repeated string hIds = 3;
    repeated uint32 blob = 4;
    string accountId = 5;
    string characterId = 6;
    string originNickname = 7;
    string reason = 8;
    uint32 needBlock = 9;
    uint32 needHWBlock = 10;
    uint32 blockTime_min = 11;
    uint32 banType = 12;
    int32 blobType = 13;
    string blobNameTag = 14;
}

message C2S_BanCheck_Hardware_POST {
    string accountId = 1;
    repeated string hIds = 2;
}

message S2C_BanCheck_Hardware_POST_Response {
    string accountId = 1;
    uint32 isBan = 2;
    repeated string banHIds = 3;
    repeated string loginHIds = 4;
}

message C2S_Dirty_Item_POST {
    string accountId = 1;
    string characterId = 2;
    uint64 gameId = 3;
    repeated SItem upsertItems = 4;
    repeated uint64 deleteItemUniqueIds = 5;
}

message C2S_IronShield_Isolation_POST {
    string accountId = 1;
    int32 isolationHours = 2;
}

message C2S_Arena_Result_POST {
    GameResultInfo resultInfo = 1;
    repeated SItem items = 2;
    string secretId = 3;
    int32 isWinner = 4;
    int32 resultStatus = 5;
}

message C2S_Arena_Exit_POST {
    string accountId = 1;
    string characterId = 2;
    uint64 gameId = 3;
    string secretId = 4;
}

message C2S_Arena_Surrender_POST {
    GameResultInfo resultInfo = 1;
    repeated SItem items = 2;
    string secretId = 3;
}

message C2S_Game_Finalize_Session_POST {
    uint64 gameId = 1;
    string accountId = 2;
    string characterId = 3;
    repeated SItem recoveryItems = 4;
    repeated SItem expressItems = 5;
}

message C2S_Game_KillCount_Data_Info {
    string religionId = 1;
    string targetReligionId = 2;
    uint64 killCount = 3;
}

message C2S_Game_KillCount_Update_POST {
    string seasonId = 1;
    repeated C2S_Game_KillCount_Data_Info data = 2;
}
